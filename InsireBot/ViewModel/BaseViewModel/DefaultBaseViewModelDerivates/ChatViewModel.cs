using InsireBot.Objects;
using InsireBot.Util;
using InsireBot.Util.Services;
using System.Collections.Generic;
using System;

namespace InsireBot.ViewModel
{
	public class ChatViewModel : DefaultBaseViewModel<ChatItem>
	{
		List<ChatMessage> ReceivedMessages { get; set; }
		List<ChatMessage> GeneratedMessages { get; set; }

		public event EventHandler ReplyReceived;

		public ChatViewModel()
		{
			ReceivedMessages = new List<ChatMessage>();
			GeneratedMessages = new List<ChatMessage>();

			Name = "Messages";

			if (IsInDesignMode)
			{
				// Code runs in Blend --> create design time data. 
				for (int i = 0; i < 5; i++)
				{
					ChatItem b = new ChatMessage(Settings.Instance.IRC_Username, LocalDataBase.GetRandomMessage);
					if (!Check(b)) Items.Add(b);
				}
			}
		}
		/// <summary>
		/// for incoming Messages
		/// </summary>
		/// <param name="par"></param>
		public void Add(ChatMessage par)
		{
			ReceivedMessages.Add(par);
			Items.Add(par);
		}

		/// <summary>
		/// for Messages generated by the bot
		/// </summary>
		/// <param name="par"></param>
		public void Add(ChatReply par)
		{
			GeneratedMessages.Add(par);
			if (ReplyReceived != null) ReplyReceived(par, EventArgs.Empty);
			Items.Add(par);
		}

		public bool Check(ChatItem par)
		{
			foreach (ChatItem c in Items)
			{
				if (c.Value == par.Value && c.Time == par.Time) return true;
			}
			return false;
		}
	}
}